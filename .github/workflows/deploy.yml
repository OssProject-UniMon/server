name: Deploy to EC2

on:
  push:
    branches:
      - main  # main 브랜치에 푸시될 때 트리거

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: server-jar
          path: build/libs/server.jar

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Stop existing Java process
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          port: 22
          script: |
            screen -S javaserver -X quit || true

      - name: Remove old server.jar
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          port: 22
          script: |
            rm -f /home/ubuntu/server.jar

      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: server-jar
          path: build/libs/

      - name: Deploy to EC2
        run: |
          echo "${{ secrets.EC2_KEY }}" > private_key.pem
          chmod 600 private_key.pem
          scp -i private_key.pem -o StrictHostKeyChecking=no build/libs/server.jar ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USER }}/server.jar
          ssh -i private_key.pem -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "pgrep java | xargs kill -9; nohup java -jar /home/${{ secrets.EC2_USER }}/server.jar > /home/${{ secrets.EC2_USER }}/app.log 2>&1 &"
          rm -f private_key.pem

      - name: Monitor server.jar execution and send log on failure
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          port: 22
          script: |
            sleep 30
            if ! pgrep -f "java -jar /home/${{ secrets.EC2_USER }}/server.jar" > /dev/null; then
              curl -F "file=@/home/${{ secrets.EC2_USER }}/app.log" -F "content=Server jar process has stopped unexpectedly. Here is the log file." \
              ${{ secrets.DISCORD_WEBHOOK_URL }}
            fi
