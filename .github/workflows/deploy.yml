name: Deploy to EC2

on:
  push:
    branches:
      - main  # main 브랜치에 푸시될 때 트리거

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: server-jar
          path: build/libs/server.jar

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: server-jar
          path: ./server.jar

      - name: Stop existing Java process
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          port: 22
          script: |
            screen -S javaserver -X quit || true

      - name: Remove old server.jar
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          port: 22
          script: |
            rm -f /home/ubuntu/server.jar

      - name: Upload new server.jar
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          port: 22
          source: ./server.jar/server.jar
          target: /home/ubuntu

      - name: Start new Java server in screen session with log
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          port: 22
          script: |
            screen -dmS javaserver bash -c 'java -jar /home/ubuntu/server.jar/server.jar > /home/ubuntu/server.log 2>&1'

      - name: Monitor server.jar execution and send log on failure
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          port: 22
          script: |
            sleep 30
            if ! screen -list | grep -q "javaserver"; then
              curl -F "file=@/home/ubuntu/server.log" -F "content=Server jar process has stopped unexpectedly. Here is the log file." \
              ${{ secrets.DISCORD_WEBHOOK_URL }}
            fi
